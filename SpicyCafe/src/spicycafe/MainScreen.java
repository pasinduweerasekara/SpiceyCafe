/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package spicycafe;

import java.awt.Color;
import java.awt.Font;
import java.nio.charset.Charset;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pasindu
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form MainScreen
     */
    
    private User user;
    
    
//    TEMP USER
    
    Date curdate = new Date();
    
    User current_user = new User("pasindu","Weerasekara","Pasindu1","Manager",curdate);
//   Uncomment BELOW 
    public MainScreen(User current_user) {
        initComponents();
        user = current_user;
        itemDataTable.getTableHeader().setFont(new Font("Segoe UI",Font.PLAIN,18));
        itemDataTable.getTableHeader().setOpaque(false);
        itemDataTable.getTableHeader().setBackground(new Color(255,212,212));
        
        userTable.getTableHeader().setFont(new Font("Segoe UI",Font.PLAIN,18));
        userTable.getTableHeader().setOpaque(false);
        userTable.getTableHeader().setBackground(new Color(255,212,212));
        
        invoiceTable.getTableHeader().setFont(new Font("Segoe UI",Font.PLAIN,18));
        invoiceTable.getTableHeader().setOpaque(false);
        invoiceTable.getTableHeader().setBackground(new Color(255,212,212));
        
    }
   
//    Uncomment ABOVE
//    Remove BELOW
//    public MainScreen (){
//        initComponents();
//        user = current_user;
//    }
    
//    Remove ABOVE

    //    uncomment BELOW
    private MainScreen() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
//    uncomment ABOVE
    public void welcome(){
       userScreen.setVisible(false);
       itemScreen.setVisible(false);
       invoiceScreen.setVisible(false);
       welcomeScreen.setVisible(true);
       String welcomeText = "Welcome  "+user.get_first_name();
       welcomeMessage.setText(welcomeText);
       lastLogInDateTme.setText("Login Date and Time : "+user.get_current_login_date()+" At "+user.get_current_login_time());       
       userName.setText("User Name : "+user.get_first_name()+" "+user.get_last_name());
       UserId.setText("User ID : "+user.get_userId());
       jobTitle.setText("Job Title : "+user.get_job_roll());
       topUserName.setText(""+user.get_first_name());
       
        System.out.println(user.get_current_login_date());
        System.out.println(user.get_current_login_time());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        topUserName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        invoiceBtn = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        itemsBtn = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        usersBtn = new javax.swing.JLabel();
        base = new javax.swing.JPanel();
        welcomeScreen = new javax.swing.JPanel();
        welcomeMessage = new javax.swing.JLabel();
        lastLogInDateTme = new javax.swing.JLabel();
        jobTitle = new javax.swing.JLabel();
        userName = new javax.swing.JLabel();
        UserId = new javax.swing.JLabel();
        closeBtn = new javax.swing.JButton();
        invoiceScreen = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ShortCodeField = new javax.swing.JTextField();
        itemQuantityField = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        totalPriceLabel = new javax.swing.JLabel();
        itemScreen = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemDataTable = new javax.swing.JTable();
        addItemBtn = new javax.swing.JButton();
        editItemBtn = new javax.swing.JButton();
        delItemBtn = new javax.swing.JButton();
        userScreen = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        addUseraBtn = new javax.swing.JButton();
        editUserBtn = new javax.swing.JButton();
        deleteUserBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spicy Cafe");
        setMinimumSize(new java.awt.Dimension(1080, 720));
        setPreferredSize(new java.awt.Dimension(1080, 720));

        jPanel1.setBackground(new java.awt.Color(102, 0, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Spicy Cafe ");

        topUserName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        topUserName.setForeground(new java.awt.Color(255, 255, 255));
        topUserName.setText("user name");
        topUserName.setToolTipText("Log Out");
        topUserName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        topUserName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                topUserNameMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 839, Short.MAX_VALUE)
                .addComponent(topUserName)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(topUserName))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 0, 51));

        jPanel4.setBackground(new java.awt.Color(153, 0, 102));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        invoiceBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        invoiceBtn.setForeground(new java.awt.Color(255, 255, 255));
        invoiceBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-file-invoice-dollar-32.png"))); // NOI18N
        invoiceBtn.setText("Invoice");
        invoiceBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        invoiceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(invoiceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(invoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 0, 102));

        itemsBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        itemsBtn.setForeground(new java.awt.Color(255, 255, 255));
        itemsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-food-bar-32.png"))); // NOI18N
        itemsBtn.setText("Items");
        itemsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addComponent(itemsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(153, 0, 102));

        usersBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        usersBtn.setForeground(new java.awt.Color(255, 255, 255));
        usersBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spicycafe/icons8-people-32.png"))); // NOI18N
        usersBtn.setText("Users");
        usersBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usersBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(usersBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(314, Short.MAX_VALUE))
        );

        base.setPreferredSize(new java.awt.Dimension(1080, 728));

        welcomeScreen.setBackground(new java.awt.Color(253, 239, 239));
        welcomeScreen.setPreferredSize(new java.awt.Dimension(1080, 728));

        welcomeMessage.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 36)); // NOI18N
        welcomeMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeMessage.setText("Welcome Message");

        lastLogInDateTme.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lastLogInDateTme.setText("Last Log In Date Time : login date At login Time");

        jobTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jobTitle.setText("job Title : job_title");

        userName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userName.setText("User Name : User name");

        UserId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        UserId.setText("User ID : User_Id");

        closeBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        closeBtn.setText("Next");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomeScreenLayout = new javax.swing.GroupLayout(welcomeScreen);
        welcomeScreen.setLayout(welcomeScreenLayout);
        welcomeScreenLayout.setHorizontalGroup(
            welcomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(welcomeScreenLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(welcomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userName)
                    .addComponent(UserId, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastLogInDateTme))
                .addContainerGap(560, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        welcomeScreenLayout.setVerticalGroup(
            welcomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeScreenLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(welcomeMessage)
                .addGap(48, 48, 48)
                .addComponent(userName)
                .addGap(18, 18, 18)
                .addComponent(UserId)
                .addGap(18, 18, 18)
                .addComponent(jobTitle)
                .addGap(18, 18, 18)
                .addComponent(lastLogInDateTme)
                .addGap(60, 60, 60)
                .addComponent(closeBtn)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        invoiceScreen.setBackground(new java.awt.Color(255, 204, 204));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Quantity");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Item Code");

        ShortCodeField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ShortCodeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ShortCodeField.setToolTipText("");
        ShortCodeField.setActionCommand("<Not Set>");
        ShortCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShortCodeFieldActionPerformed(evt);
            }
        });

        itemQuantityField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        itemQuantityField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemQuantityField.setToolTipText("");
        itemQuantityField.setActionCommand("<Not Set>");
        itemQuantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemQuantityFieldActionPerformed(evt);
            }
        });

        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addComponent(ShortCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel6)
                .addGap(27, 27, 27)
                .addComponent(itemQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(addBtn)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ShortCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(itemQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setText("Remove");

        invoiceTable.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Item Name", "Unit Price", "Quantity", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTable.setRowHeight(30);
        jScrollPane4.setViewportView(invoiceTable);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Total Price : ");

        totalPriceLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        totalPriceLabel.setText("0.0");

        javax.swing.GroupLayout invoiceScreenLayout = new javax.swing.GroupLayout(invoiceScreen);
        invoiceScreen.setLayout(invoiceScreenLayout);
        invoiceScreenLayout.setHorizontalGroup(
            invoiceScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoiceScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap())
            .addGroup(invoiceScreenLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        invoiceScreenLayout.setVerticalGroup(
            invoiceScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoiceScreenLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(invoiceScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoiceScreenLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(invoiceScreenLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(invoiceScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(totalPriceLabel))))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        itemScreen.setBackground(new java.awt.Color(204, 204, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Item Details");

        itemDataTable.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        itemDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Category", "Short Code", "Price", "Available Qnty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemDataTable.setFocusable(false);
        itemDataTable.setRowHeight(30);
        itemDataTable.setShowGrid(false);
        itemDataTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(itemDataTable);

        addItemBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addItemBtn.setText("Add Item");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        editItemBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        editItemBtn.setText("Edit Item");
        editItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemBtnActionPerformed(evt);
            }
        });

        delItemBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        delItemBtn.setText("Delete Item");
        delItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delItemBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemScreenLayout = new javax.swing.GroupLayout(itemScreen);
        itemScreen.setLayout(itemScreenLayout);
        itemScreenLayout.setHorizontalGroup(
            itemScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemScreenLayout.createSequentialGroup()
                .addGap(0, 272, Short.MAX_VALUE)
                .addComponent(addItemBtn)
                .addGap(83, 83, 83)
                .addComponent(editItemBtn)
                .addGap(100, 100, 100)
                .addComponent(delItemBtn)
                .addGap(220, 220, 220))
            .addGroup(itemScreenLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(itemScreenLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1)
                .addGap(30, 30, 30))
        );
        itemScreenLayout.setVerticalGroup(
            itemScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemScreenLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addGap(58, 58, 58)
                .addGroup(itemScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editItemBtn)
                    .addComponent(delItemBtn)
                    .addComponent(addItemBtn))
                .addContainerGap())
        );

        userScreen.setBackground(new java.awt.Color(255, 204, 204));
        userScreen.setPreferredSize(new java.awt.Dimension(1080, 728));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("User Details");
        jLabel2.setToolTipText("");

        userTable.setBackground(new java.awt.Color(255, 204, 204));
        userTable.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "User ID", "Job Roll", "Last Login Date", "Last Login Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setFocusable(false);
        userTable.setName(""); // NOI18N
        userTable.setRowHeight(30);
        userTable.setSelectionBackground(new java.awt.Color(102, 0, 51));
        userTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        userTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(userTable);

        addUseraBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addUseraBtn.setText("Add User");
        addUseraBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUseraBtnActionPerformed(evt);
            }
        });

        editUserBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        editUserBtn.setText("Edit User");
        editUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserBtnActionPerformed(evt);
            }
        });

        deleteUserBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        deleteUserBtn.setText("Delete User");
        deleteUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userScreenLayout = new javax.swing.GroupLayout(userScreen);
        userScreen.setLayout(userScreenLayout);
        userScreenLayout.setHorizontalGroup(
            userScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userScreenLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(userScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addUseraBtn)
                .addGap(102, 102, 102)
                .addComponent(editUserBtn)
                .addGap(79, 79, 79)
                .addComponent(deleteUserBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(userScreenLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2)
                .addGap(30, 30, 30))
        );
        userScreenLayout.setVerticalGroup(
            userScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userScreenLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addGroup(userScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUseraBtn)
                    .addComponent(editUserBtn)
                    .addComponent(deleteUserBtn))
                .addGap(108, 108, 108))
        );

        javax.swing.GroupLayout baseLayout = new javax.swing.GroupLayout(base);
        base.setLayout(baseLayout);
        baseLayout.setHorizontalGroup(
            baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
            .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(itemScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(invoiceScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(welcomeScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE))
        );
        baseLayout.setVerticalGroup(
            baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
            .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(itemScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(invoiceScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(welcomeScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(base, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(base, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void invoiceBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceBtnMouseClicked
       
       userScreen.setVisible(false);
       itemScreen.setVisible(false);
       invoiceScreen.setVisible(true);
       welcomeScreen.setVisible(false);
       
    }//GEN-LAST:event_invoiceBtnMouseClicked

    private void itemsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsBtnMouseClicked
       userScreen.setVisible(false);
       itemScreen.setVisible(true);
       invoiceScreen.setVisible(false);
       welcomeScreen.setVisible(false);
       DefaultTableModel tblmodel = (DefaultTableModel)itemDataTable.getModel();
       tblmodel.setRowCount(0);
try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "select * from food_items";
            PreparedStatement ps = con.prepareStatement(s);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                String itemCode = rs.getString("item_code");
                String itemName = rs.getString("item_name");
                String category = rs.getString("category");
                String shortCode = rs.getString("short_code");
                String price =  rs.getString("price");
                String availableQnty = rs.getString("available_qnty");
                
                String tableRowData[] = {itemCode,itemName,category,shortCode,price,availableQnty};
                
                tblmodel.addRow(tableRowData);
            }
            con.close();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }
       
       
       
    }//GEN-LAST:event_itemsBtnMouseClicked

    private void usersBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersBtnMouseClicked
       userScreen.setVisible(true);
       itemScreen.setVisible(false);
       invoiceScreen.setVisible(false);
       welcomeScreen.setVisible(false);
       
    }//GEN-LAST:event_usersBtnMouseClicked

    private void topUserNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topUserNameMouseClicked
       int returnValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Log Out", JOptionPane.YES_NO_OPTION);
       
       if (returnValue == JOptionPane.YES_OPTION){
           this.setVisible(false);
           new LogInScreen().setVisible(true);
       }
    }//GEN-LAST:event_topUserNameMouseClicked

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        userScreen.setVisible(false);
       itemScreen.setVisible(false);
       invoiceScreen.setVisible(true);
       welcomeScreen.setVisible(false);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void addUseraBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUseraBtnActionPerformed
        
        if(user.get_job_roll().equals("manager")){
        
        DefaultTableModel tblmodel = (DefaultTableModel)userTable.getModel();
        addUser addUserScreen = new addUser( tblmodel);
        addUserScreen.setAlwaysOnTop(true);
        addUserScreen.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "You Have No Permission To Edit This Data");
        }
    }//GEN-LAST:event_addUseraBtnActionPerformed

    private void editUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserBtnActionPerformed
         if(user.get_job_roll().equals("manager")){
        int selectedUserRow = userTable.getSelectedRow();
        DefaultTableModel tblModel = (DefaultTableModel)userTable.getModel();
        
        if(selectedUserRow<0){
            JOptionPane.showMessageDialog(this, "Select A User To Edit.", "Error",JOptionPane.ERROR_MESSAGE);
        }
        
            String fname = (String) tblModel.getValueAt(selectedUserRow, 0);
            String lname = (String) tblModel.getValueAt(selectedUserRow, 1);
            String jroll = (String) tblModel.getValueAt(selectedUserRow, 2);
            String uid = (String) tblModel.getValueAt(selectedUserRow, 3);
            String pword = (String) tblModel.getValueAt(selectedUserRow, 4);
                                        
        DefaultTableModel tblmodel = (DefaultTableModel)userTable.getModel();
        editUser editUserScreen = new editUser(fname,lname,jroll,uid,pword,tblmodel);
        editUserScreen.setData();
        editUserScreen.setAlwaysOnTop(true);
        editUserScreen.setVisible(true);}
         else{
             JOptionPane.showMessageDialog(this, "You Have No Permission To Edit This Data");
         }
    }//GEN-LAST:event_editUserBtnActionPerformed

    private void deleteUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserBtnActionPerformed
        if(user.get_job_roll().equals("manager")){
        int selectedUser = userTable.getSelectedRow();
           if(selectedUser > 0){
                int returnValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete This User?", "Log Out", JOptionPane.YES_NO_OPTION);
                DefaultTableModel tblmodel = (DefaultTableModel)userTable.getModel();
                if (returnValue == JOptionPane.YES_OPTION){
                        String uid = (String) tblmodel.getValueAt(selectedUser, 3);
                        
//                        Delete USer

                try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "DELETE from users WHERE user_id = ?";
            PreparedStatement ps = con.prepareStatement(s);
            ps.setString(1, (String)tblmodel.getValueAt(selectedUser, 2));
            ps.executeUpdate();
            
//            Refresh Table

            tblmodel.setRowCount(0);
            String s2 = "select * from users";
            PreparedStatement ps2 = con.prepareStatement(s2);
            ResultSet rs2 = ps2.executeQuery();
            
           
            
            while(rs2.next()){
                String firstName1 = rs2.getString("first_name");
                String lastName1 = rs2.getString("last_name");
                String userId1 = rs2.getString("user_id");
                String jobRoll1 = rs2.getString("job_roll");
                String lastLogInDate1 = rs2.getString("last_log_in_date");
                String lastLogInTime1 = rs2.getString("last_log_in_time");
                
                String tableRowData[] = {firstName1,lastName1,userId1,jobRoll1,lastLogInDate1,lastLogInTime1};
                
                tblmodel.addRow(tableRowData);
            }

//            RefreshTAble
            
            
            con.close();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
//                        Delete USER
                        
           }
       }
           else{
           JOptionPane.showMessageDialog(this, "Please Select A User To Delete", "Error", ERROR);
           
       }  }
        else{
            JOptionPane.showMessageDialog(this, "You Have No Permission To Edit This Data");
        }
    }//GEN-LAST:event_deleteUserBtnActionPerformed

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        if(user.get_job_roll().equals("manager")||user.get_job_roll().equals("exe_chef")){
        DefaultTableModel itemdataTable = (DefaultTableModel)itemDataTable.getModel();
        new AddItemScreen(itemdataTable).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "You Have No Permission To Edit This Data");
        }
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void editItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemBtnActionPerformed
        if(user.get_job_roll().equals("manager")||user.get_job_roll().equals("exe_chef")){
        
        int selectedUserRow = itemDataTable.getSelectedRow();
        DefaultTableModel tblModel = (DefaultTableModel)itemDataTable.getModel();
        
        if(selectedUserRow<0){
            JOptionPane.showMessageDialog(this, "Select An Item To Edit.", "Error",JOptionPane.ERROR_MESSAGE);
        }
        
            String item_Code = (String) tblModel.getValueAt(selectedUserRow, 0);
            String short_code = (String) tblModel.getValueAt(selectedUserRow, 3);
            String item_name = (String) tblModel.getValueAt(selectedUserRow, 1);
            String item_category = (String) tblModel.getValueAt(selectedUserRow, 2);
            String item_price = (String) tblModel.getValueAt(selectedUserRow, 4);
            String item_qnty = (String) tblModel.getValueAt(selectedUserRow, 5);
            
            DefaultTableModel tblmodel = (DefaultTableModel)itemDataTable.getModel();
                                       
            
         System.out.println(item_name+" "+ short_code+ " "+item_category+ " "+item_price+ " "+item_qnty+ " "+tblmodel);
        EditItems editItems = new EditItems(item_Code,item_name, short_code, item_category, item_price, item_qnty, tblmodel);
        editItems.setData();
        editItems.setAlwaysOnTop(true);
        editItems.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "You Have No Permission To Edit This Data");
        }
    }//GEN-LAST:event_editItemBtnActionPerformed

    private void delItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delItemBtnActionPerformed
        if(user.get_job_roll().equals("manager")||user.get_job_roll().equals("exe_chef")){
        int deletingRow = itemDataTable.getSelectedRow();
        DefaultTableModel tblmodel = (DefaultTableModel)itemDataTable.getModel();
        if(deletingRow<0){
            JOptionPane.showMessageDialog(this, "Please Select An Item To Delete");
        }
        else{
            int returnValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete This Item?", "Log Out", JOptionPane.YES_NO_OPTION);
            
            if(returnValue == JOptionPane.YES_OPTION){
                //            Delete item
                try {
                    
                    Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "DELETE from food_items WHERE item_code = ?";
            PreparedStatement ps = con.prepareStatement(s);
            ps.setString(1, (String)tblmodel.getValueAt(deletingRow, 0));
            ps.executeUpdate();
                
            } catch (Exception e) {
                
                    System.out.println(e);
                
            }

//            Delete Item
 
            }
            

//REFRESH TABLE

tblmodel.setRowCount(0);
try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "select * from food_items";
            PreparedStatement ps = con.prepareStatement(s);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                String itemCode = rs.getString("item_code");
                String itemName = rs.getString("item_name");
                String category = rs.getString("category");
                String shortCode = rs.getString("short_code");
                String price =  rs.getString("price");
                String availableQnty = rs.getString("available_qnty");
                
                String tableRowData[] = {itemCode,itemName,category,shortCode,price,availableQnty};
                
                tblmodel.addRow(tableRowData);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }

//REFRESH TABLE
        }
        }else{
            JOptionPane.showMessageDialog(this, "You Have No Permission To Edit This Data");
        }
    }//GEN-LAST:event_delItemBtnActionPerformed

    private void ShortCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShortCodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShortCodeFieldActionPerformed

    private void itemQuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemQuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemQuantityFieldActionPerformed
int counter = 0;
Float total = 0f;
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String shortCode = ShortCodeField.getText();
        int quantity = Integer.parseInt(itemQuantityField.getText());
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "select * from food_items WHERE short_code = ?";
            PreparedStatement ps = con.prepareStatement(s);
            ps.setString(1, shortCode);
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                counter +=1;
                Float itemPrice = rs.getFloat("price");
                String itemName = rs.getString("item_name");
                int itemAvailbleQnty = rs.getInt("available_qnty");
                itemAvailbleQnty -= quantity;
                String us = "UPDATE food_items SET available_qnty = ? WHERE item_code = ?";
                System.out.println(us);
                PreparedStatement ps1 = con.prepareStatement(us);
                ps1.setString(1, Integer.toString(itemAvailbleQnty));
                ps1.setString(2, rs.getString("item_code"));
                ps1.executeUpdate();
                int itemQnty = Integer.parseInt(itemQuantityField.getText());
                BillItem billitem = new BillItem(itemPrice,itemQnty);
                DefaultTableModel invoiceTbl =(DefaultTableModel)this.invoiceTable.getModel();
                String[] tblData = {Integer.toString(counter),itemName,Float.toString(itemPrice),itemQuantityField.getText(),billitem.getsubtotalString()};
                invoiceTbl.addRow(tblData);
                total += billitem.getsubtotal();
                totalPriceLabel.setText(Float.toString(total));
                itemQuantityField.setText("");
                ShortCodeField.setText("");
                
            }else{
                JOptionPane.showMessageDialog(this, "Item Not Found In Database");
            }
            
            con.close();
        } catch (Exception e) {
            
            System.out.println(e);
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }
    
    public  void showusertabledata(){
        
        DefaultTableModel tblmodel =(DefaultTableModel)userTable.getModel();
        tblmodel.setRowCount(0);
        
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "select * from users";
            PreparedStatement ps = con.prepareStatement(s);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                String firstName = rs.getString("first_name");
                String lastName = rs.getString("last_name");
                String userId = rs.getString("user_id");
                String jobRoll = rs.getString("job_roll");
                String lastLogInDate = rs.getString("last_log_in_date");
                String lastLogInTime = rs.getString("last_log_in_time");
                
                String tableRowData[] = {firstName,lastName,userId,jobRoll,lastLogInDate,lastLogInTime};
                
                tblmodel.addRow(tableRowData);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        
    }
    
    public void showitemtabledata(){
    
        DefaultTableModel tblmodel =(DefaultTableModel)itemDataTable.getModel();
        tblmodel.setRowCount(0);
        
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/spicycafedb", "root", "");
            String s = "select * from food_items";
            PreparedStatement ps = con.prepareStatement(s);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                String itemCode = rs.getString("item_code");
                String itemName = rs.getString("item_name");
                String category = rs.getString("category");
                String shortCode = rs.getString("short_code");
                String price =  rs.getString("price");
                String availableQnty = rs.getString("available_qnty");
                
                String tableRowData[] = {itemCode,itemName,category,shortCode,price,availableQnty};
                
                tblmodel.addRow(tableRowData);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ShortCodeField;
    private javax.swing.JLabel UserId;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JButton addUseraBtn;
    private javax.swing.JPanel base;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton delItemBtn;
    private javax.swing.JButton deleteUserBtn;
    private javax.swing.JButton editItemBtn;
    private javax.swing.JButton editUserBtn;
    private javax.swing.JLabel invoiceBtn;
    private javax.swing.JPanel invoiceScreen;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JTable itemDataTable;
    private javax.swing.JTextField itemQuantityField;
    private javax.swing.JPanel itemScreen;
    private javax.swing.JLabel itemsBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel jobTitle;
    private javax.swing.JLabel lastLogInDateTme;
    private javax.swing.JLabel topUserName;
    private javax.swing.JLabel totalPriceLabel;
    private javax.swing.JLabel userName;
    private javax.swing.JPanel userScreen;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel usersBtn;
    private javax.swing.JLabel welcomeMessage;
    private javax.swing.JPanel welcomeScreen;
    // End of variables declaration//GEN-END:variables
}
